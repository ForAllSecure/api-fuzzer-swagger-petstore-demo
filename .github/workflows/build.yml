name: Build

on: [push]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 1.8
        uses: actions/setup-java@v3
        with:
          java-version: 1.8
          cache: 'maven'

      - name: Build with Maven
        run: mvn -B package --file pom.xml

      - name: Log in to the Container registry
        uses: docker/login-action@v2.1.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4.1.1
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v3.2.0
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Start API
        run: |
          docker run -t --rm -d -p 6300:6300 -p 8888:8080 ${{ steps.meta.outputs.tags }}
          sleep 5

      # Run Mayhem for API
      - name: Run Mayhem for API to check for vulnerabilities
        uses: ForAllSecure/mapi-action@v1
        continue-on-error: true
        with:
          mapi-token: ${{ secrets.MAPI_TOKEN }}
          mapi-url: https://app.mayhem.security/
          api-url: http://localhost:8888/api/v3
          api-spec: ./src/main/resources/openapi.yaml
          sarif-report: mapi.sarif
          html-report: mapi.html
          target: forallsecure/petstore-ci/petstore
        
      - name: Collect coverage
        run: |          
          # Download JaCoCo CLI  if not already present
          test -f jacococli.jar || curl -o jacococli.jar https://repo1.maven.org/maven2/org/jacoco/org.jacoco.cli/0.8.6/org.jacoco.cli-0.8.6-nodeps.jar

          # Dump coverage data
          java -jar jacococli.jar dump --address localhost --port 6300 --destfile coverage.exec

          # Generate a report from the coverage data
          java -jar jacococli.jar report coverage.exec --classfiles target/classes/ --sourcefiles src/main/java --name "PetStore" --html report

      - name: Shut down API
        run: |          
          docker ps | grep ${{ steps.meta.outputs.tags }} | cut -d" " -f1 | xargs docker rm -f

      - name: Archive Mayhem for API report
        uses: actions/upload-artifact@v3
        with:
          name: reports
          path: |
            mapi.html
            report/

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          files: coverage.exec
          flags: vulnerability-tests
          name: mayhem
